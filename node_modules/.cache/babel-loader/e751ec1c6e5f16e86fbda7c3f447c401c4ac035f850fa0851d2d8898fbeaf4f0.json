{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode-workspace\\\\React\\\\imdb-app\\\\src\\\\Components\\\\WatchList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport genreids from \"../Utitlity/genre\";\nimport \"../static/style.css\";\nimport FlipCard from \"./FlipCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WatchList(props) {\n  _s();\n  let {\n    watchList,\n    handleRemoveFromWatchList,\n    setWatchList\n  } = props;\n  let [genreList, setGenreList] = useState([\"All Genres\"]);\n  let [currGenre, setCurrGenre] = useState(\"All Genres\");\n  let [search, setSearch] = useState(\"\");\n  {/*Filter movies based on genre selected */}\n  let hanldeFilter = genre => {\n    setCurrGenre(genre);\n  };\n  {/*Filter movies based on search input */}\n  let handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  {/*Whenever the watchlist is updated fetch the respective genres and append to genrelist*/}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex justify-center flex-wrap m-4\",\n      children: genreList.map(genre => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => hanldeFilter(genre),\n          class: currGenre == genre ? \"flex justify-center items-center w-[9rem] h-[3rem] rounded-xl bg-yellow-300 m-4  font-bold \" : \"hover:cursor-pointer flex justify-center items-center w-[9rem] h-[3rem] rounded-xl bg-gray-400/50 m-4 text-white font-bold \",\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex justify-end mx-40  \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-with-placeholder \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          onInput: handleSearch,\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"username\",\n          children: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex flex-wrap place-items-start m-6\",\n      children: watchList.filter(obj => {\n        if (currGenre == \"All Genres\") {\n          return true;\n        } else {\n          return genreids[obj.genre_ids[0]] == currGenre;\n        }\n      }).filter(movieObj => {\n        return movieObj.title.toLowerCase().includes(search.toLocaleLowerCase());\n      }).map(movieObj => {\n        return /*#__PURE__*/_jsxDEV(FlipCard, {\n          movieObj: movieObj,\n          vote_average: movieObj.vote_average,\n          name: movieObj.title,\n          poster_path: movieObj.poster_path,\n          watchList: watchList,\n          genreid: genreids[movieObj.genre_ids[0]],\n          handleRemoveFromWatchList: handleRemoveFromWatchList\n        }, movieObj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(WatchList, \"iqN/JQBh6XeZutyAARoyJ9L4Abc=\");\n_c = WatchList;\nexport default WatchList;\nvar _c;\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"names":["useEffect","useState","genreids","FlipCard","jsxDEV","_jsxDEV","Fragment","_Fragment","WatchList","props","_s","watchList","handleRemoveFromWatchList","setWatchList","genreList","setGenreList","currGenre","setCurrGenre","search","setSearch","hanldeFilter","genre","handleSearch","e","target","value","children","class","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onInput","for","filter","obj","genre_ids","movieObj","title","toLowerCase","includes","toLocaleLowerCase","vote_average","name","poster_path","genreid","_c","$RefreshReg$"],"sources":["D:/VSCode-workspace/React/imdb-app/src/Components/WatchList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport genreids from \"../Utitlity/genre\";\r\nimport \"../static/style.css\"\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nfunction WatchList(props){\r\n  let {watchList,handleRemoveFromWatchList,setWatchList} = props;\r\n  let [genreList,setGenreList] = useState([\"All Genres\"]);\r\n  let [currGenre,setCurrGenre] = useState(\"All Genres\");\r\n  let [search,setSearch] = useState(\"\");\r\n  {/*Filter movies based on genre selected */}\r\n  let hanldeFilter = (genre)=>{\r\n    setCurrGenre(genre)\r\n  }\r\n  {/*Filter movies based on search input */}\r\n  let handleSearch = (e)=>{\r\n    setSearch(e.target.value);\r\n  }\r\n  {/*Whenever the watchlist is updated fetch the respective genres and append to genrelist*/}\r\n\r\n      \r\n    return( \r\n        <>\r\n        {/*Call handlefilter to  whenever the respective genre is selected*/}\r\n          <div class=\"flex justify-center flex-wrap m-4\">\r\n              {genreList.map((genre)=>{\r\n                return <div key={genre} onClick={()=>hanldeFilter(genre)} class={\r\n                  currGenre == genre?\"flex justify-center items-center w-[9rem] h-[3rem] rounded-xl bg-yellow-300 m-4  font-bold \"\r\n                :\"hover:cursor-pointer flex justify-center items-center w-[9rem] h-[3rem] rounded-xl bg-gray-400/50 m-4 text-white font-bold \"}>{genre}</div>\r\n              })}\r\n         </div>\r\n        \r\n         {/*Call handleSearch to  whenever any input is provided in search bar*/}\r\n         <div class=\"flex justify-end mx-40  \">\r\n            <div class=\"input-with-placeholder \">\r\n                <input type=\"text\" id=\"username\"  onInput={handleSearch} value={search}/>\r\n                <label for=\"username\">Search...</label>\r\n            </div>\r\n        </div>\r\n        {/*based on above handlefilter/handlesearch selected fetch the respective movie display card by passing movieobj to display card component*/}\r\n        <div class=\"flex flex-wrap place-items-start m-6\">\r\n                 {/*filter based on  genre and then filter based on searchkeyword */}\r\n                {watchList.filter((obj)=>{\r\n                  if(currGenre == \"All Genres\"){\r\n                    return true;\r\n                  }else{\r\n                    return genreids[obj.genre_ids[0]] == currGenre;\r\n                  }\r\n                })\r\n                .filter((movieObj)=>{\r\n                  return movieObj.title.toLowerCase().includes(search.toLocaleLowerCase());\r\n                })\r\n                .map((movieObj)=>{\r\n                    return  <FlipCard key={movieObj.id}\r\n                    movieObj={movieObj}\r\n                    vote_average={movieObj.vote_average}\r\n                    name={movieObj.title} \r\n                    poster_path={movieObj.poster_path}\r\n                    watchList = { watchList}\r\n                    genreid ={genreids[movieObj.genre_ids[0]]}\r\n                    handleRemoveFromWatchList = {handleRemoveFromWatchList}/>\r\n                \r\n                })}    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WatchList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}