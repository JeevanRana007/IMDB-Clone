{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode-workspace\\\\React\\\\imdb-app\\\\src\\\\Components\\\\DropDownComp.jsx\";\nimport { useState } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropDownComp = props => {\n  const options = ['One', 'Two', 'Three', 'Four'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '40%',\n      marginTop: '60px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Greetings from GeeksforGeeks!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      filterOptions: (options, params) => {\n        const filtered = filter(options, params);\n        // Suggest the creation of a new value \n        if (params.inputValue !== '') {\n          filtered.push(`Add \"${params.inputValue}\"`);\n        }\n        return filtered;\n      },\n      selectOnFocus: true,\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      options: options,\n      renderOption: option => option,\n      style: {\n        width: 300\n      },\n      freeSolo: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Enter Something\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_c = DropDownComp;\nexport default DropDownComp;\nvar _c;\n$RefreshReg$(_c, \"DropDownComp\");","map":{"version":3,"names":["useState","Dropdown","React","TextField","Autocomplete","createFilterOptions","jsxDEV","_jsxDEV","DropDownComp","props","options","style","marginLeft","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","filterOptions","params","filtered","filter","inputValue","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","option","width","freeSolo","renderInput","label","variant","_c","$RefreshReg$"],"sources":["D:/VSCode-workspace/React/imdb-app/src/Components/DropDownComp.jsx"],"sourcesContent":["import {useState } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport React from 'react'\r\nimport TextField from '@material-ui/core/TextField'; \r\nimport Autocomplete, \r\n{ createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nconst DropDownComp = (props) => {\r\n    const options = ['One', 'Two', 'Three', 'Four'] \r\n  \r\n    return ( \r\n      <div style={{ marginLeft: '40%', marginTop: '60px' }}> \r\n        <h3>Greetings from GeeksforGeeks!</h3> \r\n        <Autocomplete \r\n          filterOptions={(options, params) => { \r\n            const filtered = filter(options, params); \r\n            // Suggest the creation of a new value \r\n            if (params.inputValue !== '') { \r\n              filtered.push(`Add \"${params.inputValue}\"`); \r\n            } \r\n            return filtered; \r\n          }} \r\n          selectOnFocus \r\n          clearOnBlur \r\n          handleHomeEndKeys \r\n          options={options} \r\n          renderOption={(option) => option} \r\n          style={{ width: 300 }} \r\n          freeSolo \r\n          renderInput={(params) => ( \r\n            <TextField {...params} label=\"Enter Something\"\r\n              variant=\"outlined\" /> \r\n          )} \r\n        /> \r\n      </div> \r\n    ); \r\n  };\r\n  \r\n  export default DropDownComp;"],"mappings":";AAAA,SAAQA,QAAQ,QAAQ,OAAO;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,YAAY,IACjBC,mBAAmB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;EAE/C,oBACEH,OAAA;IAAKI,KAAK,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDP,OAAA;MAAAO,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCX,OAAA,CAACH,YAAY;MACXe,aAAa,EAAEA,CAACT,OAAO,EAAEU,MAAM,KAAK;QAClC,MAAMC,QAAQ,GAAGC,MAAM,CAACZ,OAAO,EAAEU,MAAM,CAAC;QACxC;QACA,IAAIA,MAAM,CAACG,UAAU,KAAK,EAAE,EAAE;UAC5BF,QAAQ,CAACG,IAAI,CAAE,QAAOJ,MAAM,CAACG,UAAW,GAAE,CAAC;QAC7C;QACA,OAAOF,QAAQ;MACjB,CAAE;MACFI,aAAa;MACbC,WAAW;MACXC,iBAAiB;MACjBjB,OAAO,EAAEA,OAAQ;MACjBkB,YAAY,EAAGC,MAAM,IAAKA,MAAO;MACjClB,KAAK,EAAE;QAAEmB,KAAK,EAAE;MAAI,CAAE;MACtBC,QAAQ;MACRC,WAAW,EAAGZ,MAAM,iBAClBb,OAAA,CAACJ,SAAS;QAAA,GAAKiB,MAAM;QAAEa,KAAK,EAAC,iBAAiB;QAC5CC,OAAO,EAAC;MAAU;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACiB,EAAA,GA7BE3B,YAAY;AA+BhB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}