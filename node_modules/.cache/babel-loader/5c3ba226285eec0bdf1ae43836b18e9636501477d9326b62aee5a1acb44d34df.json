{"ast":null,"code":"var _jsxFileName = \"D:\\\\VSCode-workspace\\\\React\\\\imdb-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Movies from './Components/Movies';\nimport WatchList from './Components/WatchList';\nimport Navbar from './Components/Navbar';\nimport Banner from './Components/Banner';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //use States to manage user's watchlist and current page number\n  let [watchList, setWatchList] = useState([]);\n  let [pageNo, setPageNo] = useState(1);\n  //handle pagination by changing pageNo when user click prev buttons\n  let handlePrev = () => {\n    if (pageNo > 1) setPageNo(pageNo - 1);\n  };\n  //handle pagination by changing pageNo when user click next buttons\n  let handleNext = () => {\n    setPageNo(pageNo + 1);\n  };\n  //add the movieobj to the watchlist and storing it to the localstorage and update watchlist\n  let handleAddToWatchList = movieObj => {\n    let newWatchList = [...watchList, movieObj];\n    localStorage.setItem(\"movieApp\", JSON.stringify(newWatchList));\n    setWatchList(newWatchList);\n  };\n  //filter by removing movieobj from the existing watchlist and storing it to the localstorage and update watchlist\n  let handleRemoveFromWatchList = movieObj => {\n    let filteredWatchList = watchList.filter(movie => {\n      return movie.id !== movieObj.id;\n    });\n    localStorage.setItem(\"movieApp\", JSON.stringify(filteredWatchList));\n    setWatchList(filteredWatchList);\n  };\n  //Retrieve the watchlist from local storage if exist when they revisit the app\n  useEffect(() => {\n    let moviesFromLocalStorage = localStorage.getItem(\"movieApp\");\n    if (!moviesFromLocalStorage) {\n      return;\n    }\n    setWatchList(JSON.parse(moviesFromLocalStorage));\n  }, []);\n  //Returning Navbar and routes with their specific components\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Movies, {\n              watchList: watchList,\n              setWatchList: setWatchList,\n              handleAddToWatchList: handleAddToWatchList,\n              handleRemoveFromWatchList: handleRemoveFromWatchList,\n              pageNo: pageNo,\n              handleNext: handleNext,\n              handlePrev: handlePrev\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watchlist\",\n          element: /*#__PURE__*/_jsxDEV(WatchList, {\n            watchList: watchList,\n            setWatchList: setWatchList,\n            handleRemoveFromWatchList: handleRemoveFromWatchList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xdLedRwX2RTIwCWKV/mNcitMt1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Movies","WatchList","Navbar","Banner","BrowserRouter","Route","Routes","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","watchList","setWatchList","pageNo","setPageNo","handlePrev","handleNext","handleAddToWatchList","movieObj","newWatchList","localStorage","setItem","JSON","stringify","handleRemoveFromWatchList","filteredWatchList","filter","movie","id","moviesFromLocalStorage","getItem","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/VSCode-workspace/React/imdb-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Movies from './Components/Movies';\nimport WatchList from './Components/WatchList';\nimport Navbar from './Components/Navbar';\nimport Banner from './Components/Banner';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport {useState,useEffect} from \"react\"\n\n\nfunction App() {\n  //use States to manage user's watchlist and current page number\n  let [watchList,setWatchList] = useState([]);\n  let [pageNo,setPageNo] = useState(1); \n  //handle pagination by changing pageNo when user click prev buttons\n    let handlePrev = ()=>{\n        if(pageNo>1)\n            setPageNo(pageNo-1)\n    }\n    //handle pagination by changing pageNo when user click next buttons\n    let handleNext = ()=>{\n        setPageNo(pageNo+1);\n    }\n    //add the movieobj to the watchlist and storing it to the localstorage and update watchlist\n  let handleAddToWatchList = (movieObj)=>{\n      let newWatchList = [...watchList,movieObj];\n      localStorage.setItem(\"movieApp\",JSON.stringify(newWatchList));\n      setWatchList(newWatchList);\n  }\n //filter by removing movieobj from the existing watchlist and storing it to the localstorage and update watchlist\n  let handleRemoveFromWatchList = (movieObj)=>{\n      let filteredWatchList = watchList.filter((movie)=>{\n          return movie.id !== movieObj.id;\n      })\n      localStorage.setItem(\"movieApp\",JSON.stringify(filteredWatchList));\n      setWatchList(filteredWatchList);\n  }\n//Retrieve the watchlist from local storage if exist when they revisit the app\n  useEffect(()=>{\n    let moviesFromLocalStorage = localStorage.getItem(\"movieApp\");\n    if(!moviesFromLocalStorage){\n        return;\n    }\n    setWatchList(JSON.parse(moviesFromLocalStorage));\n},[])\n  //Returning Navbar and routes with their specific components\n  return (\n    <div className='App'>\n          <BrowserRouter>\n          {/*Adding Navigation Bar to the Dashboard */}\n            <Navbar/>\n            <Routes>\n              {/*Adding Navigation Bar to the Dashboard */}\n              <Route path='/' element={\n                <>\n                {/*Adding Banner to the Dashboard */}\n                  <Banner/>\n                    {/*Adding Movies to the Dashboard */}\n                  <Movies watchList={watchList}\n                          setWatchList={setWatchList}\n                          handleAddToWatchList={handleAddToWatchList}\n                          handleRemoveFromWatchList={handleRemoveFromWatchList}\n                          pageNo={pageNo}\n                          handleNext={handleNext}\n                          handlePrev={handlePrev}/>\n                </>\n              }></Route>\n        \n              <Route path='/watchlist' element={\n                <WatchList watchList={watchList}\n                          setWatchList={setWatchList}\n                            handleRemoveFromWatchList={handleRemoveFromWatchList}/>\n              }\n              ></Route>  \n            </Routes>\n          </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}